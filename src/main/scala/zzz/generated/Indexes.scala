/*
 * This file is generated by jOOQ.
 */
package zzz.generated


import javax.annotation.Generated

import org.jooq.Index
import org.jooq.OrderField
import org.jooq.impl.Internal

import scala.Array

import zzz.generated.tables.Bout
import zzz.generated.tables.Division
import zzz.generated.tables.Draft
import zzz.generated.tables.Game
import zzz.generated.tables.Player


/**
 * A class modelling indexes of tables of the <code>scl</code> schema.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.11.11"
  ),
  comments = "This class is generated by jOOQ"
)
object Indexes {

  // -------------------------------------------------------------------------
  // INDEX definitions
  // -------------------------------------------------------------------------

  val BOUT_FK_DIVISON = Indexes0.BOUT_FK_DIVISON
  val BOUT_FK_DRAFT = Indexes0.BOUT_FK_DRAFT
  val BOUT_FK_PLAYER1 = Indexes0.BOUT_FK_PLAYER1
  val BOUT_FK_PLAYER2 = Indexes0.BOUT_FK_PLAYER2
  val BOUT_FK_WINNER = Indexes0.BOUT_FK_WINNER
  val BOUT_PRIMARY = Indexes0.BOUT_PRIMARY
  val DIVISION_PRIMARY = Indexes0.DIVISION_PRIMARY
  val DRAFT_PRIMARY = Indexes0.DRAFT_PRIMARY
  val GAME_FK_MATCH = Indexes0.GAME_FK_MATCH
  val GAME_FK_SNIPER = Indexes0.GAME_FK_SNIPER
  val GAME_FK_SPY = Indexes0.GAME_FK_SPY
  val GAME_IDX_UUID = Indexes0.GAME_IDX_UUID
  val GAME_PRIMARY = Indexes0.GAME_PRIMARY
  val PLAYER_FK_LEAGUE = Indexes0.PLAYER_FK_LEAGUE
  val PLAYER_PRIMARY = Indexes0.PLAYER_PRIMARY

  // -------------------------------------------------------------------------
  // [#1459] distribute members to avoid static initialisers > 64kb
  // -------------------------------------------------------------------------

  private object Indexes0 {
    val BOUT_FK_DIVISON : Index = Internal.createIndex("fk_divison", Bout.BOUT, Array[OrderField [_] ](Bout.BOUT.DIVISION), false)
    val BOUT_FK_DRAFT : Index = Internal.createIndex("fk_draft", Bout.BOUT, Array[OrderField [_] ](Bout.BOUT.DRAFT), false)
    val BOUT_FK_PLAYER1 : Index = Internal.createIndex("fk_player1", Bout.BOUT, Array[OrderField [_] ](Bout.BOUT.PLAYER1), false)
    val BOUT_FK_PLAYER2 : Index = Internal.createIndex("fk_player2", Bout.BOUT, Array[OrderField [_] ](Bout.BOUT.PLAYER2), false)
    val BOUT_FK_WINNER : Index = Internal.createIndex("fk_winner", Bout.BOUT, Array[OrderField [_] ](Bout.BOUT.FORFEIT_WINNER), false)
    val BOUT_PRIMARY : Index = Internal.createIndex("PRIMARY", Bout.BOUT, Array[OrderField [_] ](Bout.BOUT.ID), true)
    val DIVISION_PRIMARY : Index = Internal.createIndex("PRIMARY", Division.DIVISION, Array[OrderField [_] ](Division.DIVISION.NAME), true)
    val DRAFT_PRIMARY : Index = Internal.createIndex("PRIMARY", Draft.DRAFT, Array[OrderField [_] ](Draft.DRAFT.ID), true)
    val GAME_FK_MATCH : Index = Internal.createIndex("fk_match", Game.GAME, Array[OrderField [_] ](Game.GAME.BOUT), false)
    val GAME_FK_SNIPER : Index = Internal.createIndex("fk_sniper", Game.GAME, Array[OrderField [_] ](Game.GAME.SNIPER), false)
    val GAME_FK_SPY : Index = Internal.createIndex("fk_spy", Game.GAME, Array[OrderField [_] ](Game.GAME.SPY), false)
    val GAME_IDX_UUID : Index = Internal.createIndex("idx_uuid", Game.GAME, Array[OrderField [_] ](Game.GAME.UUID), true)
    val GAME_PRIMARY : Index = Internal.createIndex("PRIMARY", Game.GAME, Array[OrderField [_] ](Game.GAME.ID), true)
    val PLAYER_FK_LEAGUE : Index = Internal.createIndex("fk_league", Player.PLAYER, Array[OrderField [_] ](Player.PLAYER.DIVISION), false)
    val PLAYER_PRIMARY : Index = Internal.createIndex("PRIMARY", Player.PLAYER, Array[OrderField [_] ](Player.PLAYER.NAME), true)
  }
}
