/*
 * This file is generated by jOOQ.
 */
package zzz.generated.tables.records


import java.lang.Integer
import java.lang.String
import java.sql.Timestamp

import javax.annotation.Generated

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record12
import org.jooq.Row12
import org.jooq.impl.UpdatableRecordImpl

import scala.Array

import zzz.generated.tables.Game


/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.11.11"
  ),
  comments = "This class is generated by jOOQ"
)
class GameRecord extends UpdatableRecordImpl[GameRecord](Game.GAME) with Record12[Integer, String, String, Integer, Integer, Integer, String, String, Integer, Integer, String, Timestamp] {

  /**
   * Setter for <code>scl.game.id</code>.
   */
  def setId(value : Integer) : Unit = {
    set(0, value)
  }

  /**
   * Getter for <code>scl.game.id</code>.
   */
  def getId : Integer = {
    val r = get(0)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  /**
   * Setter for <code>scl.game.spy</code>.
   */
  def setSpy(value : String) : Unit = {
    set(1, value)
  }

  /**
   * Getter for <code>scl.game.spy</code>.
   */
  def getSpy : String = {
    val r = get(1)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>scl.game.sniper</code>.
   */
  def setSniper(value : String) : Unit = {
    set(2, value)
  }

  /**
   * Getter for <code>scl.game.sniper</code>.
   */
  def getSniper : String = {
    val r = get(2)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>scl.game.bout</code>.
   */
  def setBout(value : Integer) : Unit = {
    set(3, value)
  }

  /**
   * Getter for <code>scl.game.bout</code>.
   */
  def getBout : Integer = {
    val r = get(3)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  /**
   * Setter for <code>scl.game.result</code>.
   */
  def setResult(value : Integer) : Unit = {
    set(4, value)
  }

  /**
   * Getter for <code>scl.game.result</code>.
   */
  def getResult : Integer = {
    val r = get(4)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  /**
   * Setter for <code>scl.game.sequence</code>.
   */
  def setSequence(value : Integer) : Unit = {
    set(5, value)
  }

  /**
   * Getter for <code>scl.game.sequence</code>.
   */
  def getSequence : Integer = {
    val r = get(5)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  /**
   * Setter for <code>scl.game.venue</code>.
   */
  def setVenue(value : String) : Unit = {
    set(6, value)
  }

  /**
   * Getter for <code>scl.game.venue</code>.
   */
  def getVenue : String = {
    val r = get(6)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>scl.game.gametype</code>.
   */
  def setGametype(value : String) : Unit = {
    set(7, value)
  }

  /**
   * Getter for <code>scl.game.gametype</code>.
   */
  def getGametype : String = {
    val r = get(7)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>scl.game.start_duration_seconds</code>.
   */
  def setStartDurationSeconds(value : Integer) : Unit = {
    set(8, value)
  }

  /**
   * Getter for <code>scl.game.start_duration_seconds</code>.
   */
  def getStartDurationSeconds : Integer = {
    val r = get(8)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  /**
   * Setter for <code>scl.game.guests</code>.
   */
  def setGuests(value : Integer) : Unit = {
    set(9, value)
  }

  /**
   * Getter for <code>scl.game.guests</code>.
   */
  def getGuests : Integer = {
    val r = get(9)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  /**
   * Setter for <code>scl.game.uuid</code>.
   */
  def setUuid(value : String) : Unit = {
    set(10, value)
  }

  /**
   * Getter for <code>scl.game.uuid</code>.
   */
  def getUuid : String = {
    val r = get(10)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>scl.game.timestamp</code>.
   */
  def setTimestamp(value : Timestamp) : Unit = {
    set(11, value)
  }

  /**
   * Getter for <code>scl.game.timestamp</code>.
   */
  def getTimestamp : Timestamp = {
    val r = get(11)
    if (r == null) null else r.asInstanceOf[Timestamp]
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------
  override def key : Record1[Integer] = {
    return super.key.asInstanceOf[ Record1[Integer] ]
  }

  // -------------------------------------------------------------------------
  // Record12 type implementation
  // -------------------------------------------------------------------------

  override def fieldsRow : Row12[Integer, String, String, Integer, Integer, Integer, String, String, Integer, Integer, String, Timestamp] = {
    super.fieldsRow.asInstanceOf[ Row12[Integer, String, String, Integer, Integer, Integer, String, String, Integer, Integer, String, Timestamp] ]
  }

  override def valuesRow : Row12[Integer, String, String, Integer, Integer, Integer, String, String, Integer, Integer, String, Timestamp] = {
    super.valuesRow.asInstanceOf[ Row12[Integer, String, String, Integer, Integer, Integer, String, String, Integer, Integer, String, Timestamp] ]
  }
  override def field1 : Field[Integer] = Game.GAME.ID
  override def field2 : Field[String] = Game.GAME.SPY
  override def field3 : Field[String] = Game.GAME.SNIPER
  override def field4 : Field[Integer] = Game.GAME.BOUT
  override def field5 : Field[Integer] = Game.GAME.RESULT
  override def field6 : Field[Integer] = Game.GAME.SEQUENCE
  override def field7 : Field[String] = Game.GAME.VENUE
  override def field8 : Field[String] = Game.GAME.GAMETYPE
  override def field9 : Field[Integer] = Game.GAME.START_DURATION_SECONDS
  override def field10 : Field[Integer] = Game.GAME.GUESTS
  override def field11 : Field[String] = Game.GAME.UUID
  override def field12 : Field[Timestamp] = Game.GAME.TIMESTAMP
  override def component1 : Integer = getId
  override def component2 : String = getSpy
  override def component3 : String = getSniper
  override def component4 : Integer = getBout
  override def component5 : Integer = getResult
  override def component6 : Integer = getSequence
  override def component7 : String = getVenue
  override def component8 : String = getGametype
  override def component9 : Integer = getStartDurationSeconds
  override def component10 : Integer = getGuests
  override def component11 : String = getUuid
  override def component12 : Timestamp = getTimestamp
  override def value1 : Integer = getId
  override def value2 : String = getSpy
  override def value3 : String = getSniper
  override def value4 : Integer = getBout
  override def value5 : Integer = getResult
  override def value6 : Integer = getSequence
  override def value7 : String = getVenue
  override def value8 : String = getGametype
  override def value9 : Integer = getStartDurationSeconds
  override def value10 : Integer = getGuests
  override def value11 : String = getUuid
  override def value12 : Timestamp = getTimestamp

  override def value1(value : Integer) : GameRecord = {
    setId(value)
    this
  }

  override def value2(value : String) : GameRecord = {
    setSpy(value)
    this
  }

  override def value3(value : String) : GameRecord = {
    setSniper(value)
    this
  }

  override def value4(value : Integer) : GameRecord = {
    setBout(value)
    this
  }

  override def value5(value : Integer) : GameRecord = {
    setResult(value)
    this
  }

  override def value6(value : Integer) : GameRecord = {
    setSequence(value)
    this
  }

  override def value7(value : String) : GameRecord = {
    setVenue(value)
    this
  }

  override def value8(value : String) : GameRecord = {
    setGametype(value)
    this
  }

  override def value9(value : Integer) : GameRecord = {
    setStartDurationSeconds(value)
    this
  }

  override def value10(value : Integer) : GameRecord = {
    setGuests(value)
    this
  }

  override def value11(value : String) : GameRecord = {
    setUuid(value)
    this
  }

  override def value12(value : Timestamp) : GameRecord = {
    setTimestamp(value)
    this
  }

  override def values(value1 : Integer, value2 : String, value3 : String, value4 : Integer, value5 : Integer, value6 : Integer, value7 : String, value8 : String, value9 : Integer, value10 : Integer, value11 : String, value12 : Timestamp) : GameRecord = {
    this.value1(value1)
    this.value2(value2)
    this.value3(value3)
    this.value4(value4)
    this.value5(value5)
    this.value6(value6)
    this.value7(value7)
    this.value8(value8)
    this.value9(value9)
    this.value10(value10)
    this.value11(value11)
    this.value12(value12)
    this
  }

  /**
   * Create a detached, initialised GameRecord
   */
  def this(id : Integer, spy : String, sniper : String, bout : Integer, result : Integer, sequence : Integer, venue : String, gametype : String, startDurationSeconds : Integer, guests : Integer, uuid : String, timestamp : Timestamp) = {
    this()

    set(0, id)
    set(1, spy)
    set(2, sniper)
    set(3, bout)
    set(4, result)
    set(5, sequence)
    set(6, venue)
    set(7, gametype)
    set(8, startDurationSeconds)
    set(9, guests)
    set(10, uuid)
    set(11, timestamp)
  }
}
